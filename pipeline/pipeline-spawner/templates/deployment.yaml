apiVersion: apps/v1beta2
kind: Deployment
metadata:
  #{{- include "labels" . | indent 4 }}
spec:
  revisionHistoryLimit: 10
  replicas: 1
  strategy:
      type: RollingUpdate
      rollingUpdate:
          maxUnavailable: 0
          maxSurge: 1
  selector:
    matchLabels:
      app_name: {{ .Chart.Name }}
  template:
    metadata:
      #{{- include "labels" . | indent 4 }}
    spec:
      containers:
      - name: pipeline-spawner
        image: {{ .Values.kubernetes.repo.host }}:{{ .Values.kubernetes.repo.port }}/ukiss/pipeline-spawner:{{ .Chart.Version }}
        resources:
          limits:
            memory: {{ .Values.kubernetes.limits.memory }}
        securityContext:
          capabilities:
            add:
            - SYS_PTRACE
        env:
        - name: LOG_IDENTIFIER
          value: {{ .Values._logIdentifier }}
        - name: APPLICATION_VERSION
          value: {{ .Chart.Version | quote }}
        - name: APPLICATION_PROPERTIES_VERSION
          value: {{ .Values._configVersion | quote }}
        volumeMounts:
          - name: config-volume
            mountPath: /app/config/
          - name: secret-volume
            mountPath: /app/secrets/
          - name: npr-volume
            mountPath: {{ .Values.properties.app.file.directory }}
        ports:
        - containerPort: {{ .Values.properties.app.port }}
        livenessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.properties.app.port }}
          initialDelaySeconds: 180
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.properties.app.port }}
          initialDelaySeconds: 10
          failureThreshold: 1
          timeoutSeconds: 15
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Chart.Name }}
        - name: secret-volume
          secret:
            secretName: pipeline-spawner
      securityContext:
        runAsNonRoot: true
        runAsUser: 4659
        fsGroup: 4659
      restartPolicy: Always